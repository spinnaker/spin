name: Branch Build

on:
  push:
    branches:
    - master
    - release-*

env:
  CONTAINER_REGISTRY: us-docker.pkg.dev/spinnaker-community/docker

jobs:
  lint:
    # Only run this on repositories in the 'spinnaker' org, not on forks.
    if: startsWith(github.repository, 'spinnaker/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Ensure code formatting and style is consistent
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.32

  branch-build:
    # Only run this on repositories in the 'spinnaker' org, not on forks.
    if: startsWith(github.repository, 'spinnaker/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract repository name
        id: extract_repo_name
        run: echo ::set-output name=REPO::${GITHUB_REPOSITORY##*/}
      - name: Get date
        id: get_date
        run: echo ::set-output name=DATETIME::$(date --utc +'%Y%m%d%H%M')

      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Fetch dependencies
        run: go get -d -v
      - name: Test
        run: go test -v ./...
      - name: Build binaries
        env:
          LDFLAGS: "-X github.com/spinnaker/spin/version.Version=${{ github.ref_name }}-${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}"
        run: |
          GOARCH=amd64 GOOS=darwin go build -ldflags "${LDFLAGS}" -o dist/${{ github.ref_name }}/${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}/darwin/amd64/spin .
          GOARCH=amd64 GOOS=linux go build -ldflags "${LDFLAGS}" -o dist/${{ github.ref_name }}/${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}/linux/amd64/spin .
          GOARCH=amd64 GOOS=windows go build -ldflags "${LDFLAGS}" -o dist/${{ github.ref_name }}/${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}/windows/amd64/spin.exe .
          dist/${{ github.ref_name }}/${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}/linux/amd64/spin --version
      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v0'
        # use service account flow defined at: https://github.com/google-github-actions/upload-cloud-storage#authenticating-via-service-account-key-json
        with:
          credentials_json: '${{ secrets.GAR_JSON_KEY }}'
      - name: Upload spin CLI binaries to GCS
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: 'dist/'
          destination: 'spinnaker-artifacts/spin'
          parent: false

      - name: Login to GAR
        # Only run this on repositories in the 'spinnaker' org, not on forks.
        if: startsWith(github.repository, 'spinnaker/')
        uses: docker/login-action@v1
        # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}
      - name: Build and publish container image
        # Only run this on repositories in the 'spinnaker' org, not on forks.
        if: startsWith(github.repository, 'spinnaker/')
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            "VERSION=${{ github.ref_name }}-${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}"
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.extract_repo_name.outputs.REPO }}:${{ github.ref_name }}-latest"
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.extract_repo_name.outputs.REPO }}:${{ github.ref_name }}-${{ github.sha }}-${{ steps.get_date.outputs.DATETIME }}"
