---
swagger: "2.0"
info:
  title: "Spinnaker API"
  contact: {}
host: "localhost"
basePath: "/"
tags:
- name: "task-controller"
  description: "Task Controller"
- name: "amazon-infrastructure-controller"
  description: "Amazon Infrastructure Controller"
- name: "project-controller"
  description: "Project Controller"
- name: "auth-controller"
  description: "Auth Controller"
- name: "search-controller"
  description: "Search Controller"
- name: "pipeline-controller"
  description: "Pipeline Controller"
- name: "load-balancer-controller"
  description: "Load Balancer Controller"
- name: "credentials-controller"
  description: "Credentials Controller"
- name: "security-group-controller"
  description: "Security Group Controller"
- name: "image-controller"
  description: "Image Controller"
- name: "application-controller"
  description: "Application Controller"
- name: "instance-controller"
  description: "Instance Controller"
- name: "audit-events-mvc-endpoint"
  description: "Audit Events Mvc Endpoint"
- name: "server-group-controller"
  description: "Server Group Controller"
- name: "network-controller"
  description: "Network Controller"
- name: "snapshot-controller"
  description: "Snapshot Controller"
- name: "webhook-controller"
  description: "Webhook Controller"
- name: "subnet-controller"
  description: "Subnet Controller"
- name: "artifact-controller"
  description: "Artifact Controller"
- name: "executions-controller"
  description: "Executions Controller"
- name: "server-group-manager-controller"
  description: "Server Group Manager Controller"
- name: "build-controller"
  description: "Build Controller"
- name: "bake-controller"
  description: "Bake Controller"
- name: "cluster-controller"
  description: "Cluster Controller"
- name: "job-controller"
  description: "Job Controller"
paths:
  /images/{account}/{region}/{imageId}:
    get:
      tags:
      - "image-controller"
      summary: "Get image details"
      operationId: "getImageDetailsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "imageId"
        in: "path"
        description: "imageId"
        required: true
        type: "string"
        x-exportParamName: "ImageId"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/resume:
    put:
      tags:
      - "pipeline-controller"
      summary: "Resume a pipeline execution"
      operationId: "resumePipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/snapshots/{account}:
    get:
      tags:
      - "snapshot-controller"
      summary: "Get current snapshot"
      operationId: "getCurrentSnapshotUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/jobs/{account}/{region}/{name}:
    get:
      tags:
      - "job-controller"
      summary: "Get job"
      operationId: "getJobUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "string"
        default: "false"
        x-exportParamName: "Expand"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/builds/**:
    get:
      tags:
      - "build-controller"
      summary: "Get builds for build master"
      operationId: "getBuildsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /webhooks/{type}/{source}:
    post:
      tags:
      - "webhook-controller"
      summary: "Endpoint for posting webhooks to Spinnaker's webhook service"
      operationId: "webhooksUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "source"
        in: "path"
        description: "source"
        required: true
        type: "string"
        x-exportParamName: "Source"
      - in: "body"
        name: "event"
        description: "event"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Event"
      - name: "X-Hub-Signature"
        in: "header"
        description: "X-Hub-Signature"
        required: false
        type: "string"
        x-exportParamName: "XHubSignature"
      - name: "X-Event-Key"
        in: "header"
        description: "X-Event-Key"
        required: false
        type: "string"
        x-exportParamName: "XEventKey"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of clusters for an account"
      operationId: "getClustersUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /search:
    get:
      tags:
      - "search-controller"
      summary: "Search infrastructure"
      operationId: "searchUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "q"
        in: "query"
        description: "q"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "type"
        in: "query"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "platform"
        in: "query"
        description: "platform"
        required: false
        type: "string"
        x-exportParamName: "Platform"
      - name: "pageSize"
        in: "query"
        description: "pageSize"
        required: false
        type: "integer"
        default: 10000
        format: "int32"
        x-exportParamName: "PageSize"
      - name: "page"
        in: "query"
        description: "page"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "allowShortQuery"
        in: "query"
        description: "allowShortQuery"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "AllowShortQuery"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/{type}/loadBalancers:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a cluster's loadbalancers"
      operationId: "getClusterLoadBalancersUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /networks/{cloudProvider}:
    get:
      tags:
      - "network-controller"
      summary: "Retrieve a list of networks for a given cloud provider"
      operationId: "allByCloudProviderUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/pause:
    put:
      tags:
      - "pipeline-controller"
      summary: "Pause a pipeline execution"
      operationId: "pausePipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/evaluateExpression:
    get:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    head:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingHEAD"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    post:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    options:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingOPTIONS"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    patch:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingPATCH"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /applications/{application}/tasks:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's tasks"
      operationId: "getTasksUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "application-controller"
      summary: "Create task"
      operationId: "taskUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /applications/{application}/pipelineConfigs/{pipelineName}:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a pipeline configuration"
      operationId: "getPipelineConfigUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineName"
        in: "path"
        description: "pipelineName"
        required: true
        type: "string"
        x-exportParamName: "PipelineName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "application-controller"
      summary: "Invoke pipeline config"
      operationId: "invokePipelineConfigUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineName"
        in: "path"
        description: "pipelineName"
        required: true
        type: "string"
        x-exportParamName: "PipelineName"
      - in: "body"
        name: "trigger"
        description: "trigger"
        required: false
        schema:
          type: "object"
        x-exportParamName: "Trigger"
      - name: "user"
        in: "query"
        description: "user"
        required: false
        type: "string"
        x-exportParamName: "User"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HttpEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /bakery/logs/{region}/{statusId}:
    get:
      tags:
      - "bake-controller"
      summary: "Retrieve the logs for a given bake"
      operationId: "lookupLogsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "statusId"
        in: "path"
        description: "statusId"
        required: true
        type: "string"
        x-exportParamName: "StatusId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/stages/{stageId}/restart:
    put:
      tags:
      - "pipeline-controller"
      summary: "Restart a stage execution"
      operationId: "restartStageUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      - in: "body"
        name: "context"
        description: "context"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Context"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /securityGroups/{account}/{region}/{name}:
    get:
      tags:
      - "security-group-controller"
      summary: "Retrieve a security group's details"
      operationId: "getSecurityGroupUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "vpcId"
        in: "query"
        description: "vpcId"
        required: false
        type: "string"
        x-exportParamName: "VpcId"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/redirect:
    get:
      tags:
      - "auth-controller"
      summary: "Redirect to Deck"
      operationId: "redirectUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "to"
        in: "query"
        description: "to"
        required: true
        type: "string"
        x-exportParamName: "To"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/loggedOut:
    get:
      tags:
      - "auth-controller"
      summary: "Get logged out message"
      operationId: "loggedOutUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /subnets/{cloudProvider}:
    get:
      tags:
      - "subnet-controller"
      summary: "Retrieve a list of subnets for a given cloud provider"
      operationId: "allByCloudProviderUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/start:
    post:
      tags:
      - "pipeline-controller"
      summary: "Initiate a pipeline execution"
      operationId: "startUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /webhooks/preconfigured:
    get:
      tags:
      - "webhook-controller"
      summary: "Retrieve a list of preconfigured webhooks in Orca"
      operationId: "preconfiguredWebhooksUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/history:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's configuration revision history"
      operationId: "getApplicationHistoryUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/jobs:
    get:
      tags:
      - "job-controller"
      summary: "Get jobs"
      operationId: "getJobsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "string"
        default: "false"
        x-exportParamName: "Expand"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /credentials/{account}:
    get:
      tags:
      - "credentials-controller"
      summary: "Retrieve an account's details"
      operationId: "getAccountUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "roles"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Roles"
      - name: "allowedAccounts"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AllowedAccounts"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
      - name: "username"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Username"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FirstName"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "LastName"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccountDetails"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve an application's details"
      operationId: "getApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Expand"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/cancel:
    put:
      tags:
      - "pipeline-controller"
      summary: "Cancel a pipeline execution"
      operationId: "cancelPipelineUsingPUT_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "reason"
        in: "query"
        description: "reason"
        required: false
        type: "string"
        x-exportParamName: "Reason"
      - name: "force"
        in: "query"
        description: "force"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Force"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{application}/{pipelineName}:
    delete:
      tags:
      - "pipeline-controller"
      summary: "Delete a pipeline definition"
      operationId: "deletePipelineUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineName"
        in: "path"
        description: "pipelineName"
        required: true
        type: "string"
        x-exportParamName: "PipelineName"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /applications/{application}/pipelines:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's pipeline executions"
      operationId: "getPipelinesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "boolean"
        x-exportParamName: "Expand"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks/cancel:
    put:
      tags:
      - "task-controller"
      summary: "Cancel tasks"
      operationId: "cancelTasksUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "ids"
        in: "query"
        description: "ids"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Ids"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /instances/{account}/{region}/{instanceId}:
    get:
      tags:
      - "instance-controller"
      summary: "Retrieve an instance's details"
      operationId: "getInstanceDetailsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "instanceId"
        in: "path"
        description: "instanceId"
        required: true
        type: "string"
        x-exportParamName: "InstanceId"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /instanceTypes:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get instance types"
      operationId: "instanceTypesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /loadBalancers:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a list of load balancers for a given cloud provider"
      operationId: "getAllUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds:
    get:
      tags:
      - "build-controller"
      summary: "Get build masters"
      operationId: "getBuildMastersUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}/scalingActivities:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of scaling activities for a server group"
      operationId: "getScalingActivitiesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "query"
        description: "region"
        required: false
        type: "string"
        x-exportParamName: "Region"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks/{id}/details/{taskDetailsId}:
    get:
      tags:
      - "task-controller"
      summary: "Get task details"
      operationId: "getTaskDetailsUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "taskDetailsId"
        in: "path"
        description: "taskDetailsId"
        required: true
        type: "string"
        x-exportParamName: "TaskDetailsId"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auditevents.json:
    get:
      tags:
      - "audit-events-mvc-endpoint"
      summary: "findByPrincipalAndAfterAndType"
      operationId: "findByPrincipalAndAfterAndTypeUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "application/vnd.spring-boot.actuator.v1+json"
      - "application/json"
      parameters:
      - name: "principal"
        in: "query"
        description: "principal"
        required: false
        type: "string"
        x-exportParamName: "Principal"
      - name: "after"
        in: "query"
        description: "after"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "After"
      - name: "type"
        in: "query"
        description: "type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/loadBalancers:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a list of load balancers for a given application"
      operationId: "getApplicationLoadBalancersUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of applications"
      operationId: "getAllApplicationsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "query"
        description: "filters results to only include applications deployed in the\
          \ specified account"
        required: false
        type: "string"
        x-exportParamName: "Account"
      - name: "owner"
        in: "query"
        description: "filteres results to only include applications owned by the specified\
          \ email"
        required: false
        type: "string"
        x-exportParamName: "Owner"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/{cloudProvider}/{scope}/serverGroups/target/{target}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a server group that matches a target coordinate (e.g., newest,\
        \ ancestor) relative to a cluster"
      description: "`scope` is either a zone or a region"
      operationId: "getTargetServerGroupUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      - name: "scope"
        in: "path"
        description: "scope"
        required: true
        type: "string"
        x-exportParamName: "Scope"
      - name: "target"
        in: "path"
        description: "target"
        required: true
        type: "string"
        x-exportParamName: "Target"
      - name: "onlyEnabled"
        in: "query"
        description: "onlyEnabled"
        required: false
        type: "boolean"
        x-exportParamName: "OnlyEnabled"
      - name: "validateOldest"
        in: "query"
        description: "validateOldest"
        required: false
        type: "boolean"
        x-exportParamName: "ValidateOldest"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /vpcs:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get VPCs"
      operationId: "vpcsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /projects/{id}/pipelines:
    get:
      tags:
      - "project-controller"
      summary: "Get all pipelines for project"
      operationId: "allPipelinesForProjectUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 5
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /networks:
    get:
      tags:
      - "network-controller"
      summary: "Retrieve a list of networks, grouped by cloud provider"
      operationId: "allUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks:
    post:
      tags:
      - "task-controller"
      summary: "Create task"
      operationId: "taskUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/pipelines/{id}/cancel:
    put:
      tags:
      - "application-controller"
      summary: "Cancel pipeline"
      operationId: "cancelPipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "reason"
        in: "query"
        description: "reason"
        required: false
        type: "string"
        x-exportParamName: "Reason"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /applications/{application}/snapshots/{account}/history:
    get:
      tags:
      - "snapshot-controller"
      summary: "Get snapshot history"
      operationId: "getSnapshotHistoryUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/stages/{stageId}:
    patch:
      tags:
      - "pipeline-controller"
      summary: "Update a stage execution"
      operationId: "updateStageUsingPATCH"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      - in: "body"
        name: "context"
        description: "context"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Context"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /applications/{application}/pipelineConfigs:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's pipeline configurations"
      operationId: "getPipelineConfigsForApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of cluster names for an application, grouped by account"
      operationId: "getClustersUsingGET_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/strategyConfigs:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's pipeline strategy configurations"
      operationId: "getStrategyConfigsForApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks/{id}/details/{taskDetailsId}:
    get:
      tags:
      - "application-controller"
      summary: "Get task details"
      operationId: "getTaskDetailsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "taskDetailsId"
        in: "path"
        description: "taskDetailsId"
        required: true
        type: "string"
        x-exportParamName: "TaskDetailsId"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /applications/{application}/serverGroupManagers:
    get:
      tags:
      - "server-group-manager-controller"
      summary: "Retrieve a list of server group managers for an application"
      operationId: "getServerGroupManagersForApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/serverGroups:
    get:
      tags:
      - "server-group-controller"
      summary: "Retrieve a list of server groups for a given application"
      operationId: "getServerGroupsForApplicationUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "string"
        default: "false"
        x-exportParamName: "Expand"
      - name: "cloudProvider"
        in: "query"
        description: "cloudProvider"
        required: false
        type: "string"
        x-exportParamName: "CloudProvider"
      - name: "clusters"
        in: "query"
        description: "clusters"
        required: false
        type: "string"
        x-exportParamName: "Clusters"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a cluster's details"
      operationId: "getClustersUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{application}/{pipelineNameOrId}:
    post:
      tags:
      - "pipeline-controller"
      summary: "Trigger a pipeline execution"
      operationId: "invokePipelineConfigUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineNameOrId"
        in: "path"
        description: "pipelineNameOrId"
        required: true
        type: "string"
        x-exportParamName: "PipelineNameOrId"
      - in: "body"
        name: "trigger"
        description: "trigger"
        required: false
        schema:
          type: "object"
        x-exportParamName: "Trigger"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HttpEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/logs:
    get:
      tags:
      - "pipeline-controller"
      summary: "Retrieve pipeline execution logs"
      operationId: "getPipelineLogsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /securityGroups:
    get:
      tags:
      - "security-group-controller"
      summary: "Retrieve a list of security groups, grouped by account, cloud provider,\
        \ and region"
      operationId: "allUsingGET_2"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "query"
        description: "id"
        required: false
        type: "string"
        x-exportParamName: "Id"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/jobs/**:
    get:
      tags:
      - "build-controller"
      summary: "Get job config"
      operationId: "getJobConfigUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}:
    get:
      tags:
      - "pipeline-controller"
      summary: "Retrieve a pipeline execution"
      operationId: "getPipelineUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "pipeline-controller"
      summary: "Update a pipeline definition"
      operationId: "updatePipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "pipeline-controller"
      summary: "Delete a pipeline execution"
      operationId: "deletePipelineUsingDELETE_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /tasks/{id}:
    get:
      tags:
      - "task-controller"
      summary: "Get task"
      operationId: "getTaskUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "task-controller"
      summary: "Delete task"
      operationId: "deleteTaskUsingDELETE"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /pipelines/move:
    post:
      tags:
      - "pipeline-controller"
      summary: "Rename a pipeline definition"
      operationId: "renamePipelineUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "renameCommand"
        description: "renameCommand"
        required: true
        schema:
          type: "object"
        x-exportParamName: "RenameCommand"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a server group's details"
      operationId: "getServerGroupsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /images/tags:
    get:
      tags:
      - "image-controller"
      summary: "Find tags"
      operationId: "findTagsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "account"
        in: "query"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "repository"
        in: "query"
        description: "repository"
        required: true
        type: "string"
        x-exportParamName: "Repository"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /subnets:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get subnets"
      operationId: "subnetsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/serverGroups:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of server groups for a cluster"
      operationId: "getServerGroupsUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/strategyConfigs/{strategyName}:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a pipeline strategy configuration"
      operationId: "getStrategyConfigUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "strategyName"
        in: "path"
        description: "strategyName"
        required: true
        type: "string"
        x-exportParamName: "StrategyName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /artifacts/credentials:
    get:
      tags:
      - "artifact-controller"
      summary: "Retrieve the list of artifact accounts configured in Clouddriver."
      operationId: "allUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/user:
    get:
      tags:
      - "auth-controller"
      summary: "Get user"
      operationId: "userUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines:
    post:
      tags:
      - "pipeline-controller"
      summary: "Save a pipeline definition"
      operationId: "savePipelineUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks/{id}/cancel:
    put:
      tags:
      - "task-controller"
      summary: "Cancel task"
      operationId: "cancelTaskUsingPUT_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/roles/sync:
    post:
      tags:
      - "auth-controller"
      summary: "Sync user roles"
      operationId: "syncUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /images/find:
    get:
      tags:
      - "image-controller"
      summary: "Retrieve a list of images, filtered by cloud provider, region, and\
        \ account"
      description: "The query parameter `q` filters the list of images by image name"
      operationId: "findImagesUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "q"
        in: "query"
        description: "q"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "region"
        in: "query"
        description: "region"
        required: false
        type: "string"
        x-exportParamName: "Region"
      - name: "account"
        in: "query"
        description: "account"
        required: false
        type: "string"
        x-exportParamName: "Account"
      - name: "count"
        in: "query"
        description: "count"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Count"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /loadBalancers/{account}/{region}/{name}:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a load balancer's details as a single element list for a\
        \ given account, region, cloud provider and load balancer name"
      operationId: "getLoadBalancerDetailsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/HashMap"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auditevents:
    get:
      tags:
      - "audit-events-mvc-endpoint"
      summary: "findByPrincipalAndAfterAndType"
      operationId: "findByPrincipalAndAfterAndTypeUsingGET"
      consumes:
      - "application/json"
      produces:
      - "application/vnd.spring-boot.actuator.v1+json"
      - "application/json"
      parameters:
      - name: "principal"
        in: "query"
        description: "principal"
        required: false
        type: "string"
        x-exportParamName: "Principal"
      - name: "after"
        in: "query"
        description: "after"
        required: false
        type: "string"
        format: "date-time"
        x-exportParamName: "After"
      - name: "type"
        in: "query"
        description: "type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /loadBalancers/{name}:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a load balancer for a given cloud provider"
      operationId: "getLoadBalancerUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /credentials:
    get:
      tags:
      - "credentials-controller"
      summary: "Retrieve a list of accounts"
      operationId: "getAccountsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "roles"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Roles"
      - name: "allowedAccounts"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AllowedAccounts"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
      - name: "username"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Username"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FirstName"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "LastName"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "boolean"
        x-exportParamName: "Expand"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /executions:
    get:
      tags:
      - "executions-controller"
      summary: "Retrieve a list of the most recent pipeline executions for the provided\
        \ `pipelineConfigIds` that match the provided `statuses` query parameter"
      operationId: "getLatestExecutionsByConfigIdsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "pipelineConfigIds"
        in: "query"
        description: "pipelineConfigIds"
        required: true
        type: "string"
        x-exportParamName: "PipelineConfigIds"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks/{id}/cancel:
    put:
      tags:
      - "application-controller"
      summary: "Cancel task"
      operationId: "cancelTaskUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /bakery/options:
    get:
      tags:
      - "bake-controller"
      summary: "Retrieve a list of available bakery base images, grouped by cloud\
        \ provider"
      operationId: "bakeOptionsUsingGET_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/serverGroups/{account}/{region}/{serverGroupName}:
    get:
      tags:
      - "server-group-controller"
      summary: "Retrieve a server group's details"
      operationId: "getServerGroupDetailsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "includeDetails"
        in: "query"
        description: "includeDetails"
        required: false
        type: "string"
        default: "true"
        x-exportParamName: "IncludeDetails"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/build/{number}/**:
    get:
      tags:
      - "build-controller"
      summary: "Get build for build master"
      operationId: "getBuildUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "number"
        in: "path"
        description: "number"
        required: true
        type: "string"
        x-exportParamName: "Number"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /instances/{account}/{region}/{instanceId}/console:
    get:
      tags:
      - "instance-controller"
      summary: "Retrieve an instance's console output"
      operationId: "getConsoleOutputUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "instanceId"
        in: "path"
        description: "instanceId"
        required: true
        type: "string"
        x-exportParamName: "InstanceId"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks/{id}:
    get:
      tags:
      - "application-controller"
      summary: "Get task"
      operationId: "getTaskUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /auth/user/serviceAccounts:
    get:
      tags:
      - "auth-controller"
      summary: "Get service accounts"
      operationId: "getServiceAccountsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /securityGroups/{account}:
    get:
      tags:
      - "security-group-controller"
      summary: "Retrieve a list of security groups for a given account, grouped by\
        \ region"
      operationId: "allByAccountUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "query"
        description: "region"
        required: false
        type: "string"
        x-exportParamName: "Region"
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/jobs:
    get:
      tags:
      - "build-controller"
      summary: "Get jobs for build master"
      operationId: "getJobsForBuildMasterUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /bakery/options/{cloudProvider}:
    get:
      tags:
      - "bake-controller"
      summary: "Retrieve a list of available bakery base images for a given cloud\
        \ provider"
      operationId: "bakeOptionsUsingGET"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
definitions:
  HashMap:
    type: "object"
    additionalProperties:
      type: "object"
      properties: {}
  Account:
    type: "object"
    properties:
      name:
        type: "string"
      requiredGroupMembership:
        type: "array"
        items:
          type: "string"
      type:
        type: "string"
      providerVersion:
        type: "string"
      accountId:
        type: "string"
      permissions:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      skin:
        type: "string"
  User:
    type: "object"
    properties:
      roles:
        type: "array"
        items:
          type: "string"
      email:
        type: "string"
      firstName:
        type: "string"
      allowedAccounts:
        type: "array"
        items:
          type: "string"
      credentialsNonExpired:
        type: "boolean"
      authorities:
        type: "array"
        items:
          $ref: "#/definitions/GrantedAuthority"
      accountNonExpired:
        type: "boolean"
      lastName:
        type: "string"
      enabled:
        type: "boolean"
      username:
        type: "string"
      accountNonLocked:
        type: "boolean"
  ResponseEntity:
    type: "object"
    properties:
      statusCode:
        type: "string"
        enum:
        - "100"
        - "101"
        - "102"
        - "103"
        - "200"
        - "201"
        - "202"
        - "203"
        - "204"
        - "205"
        - "206"
        - "207"
        - "208"
        - "226"
        - "300"
        - "301"
        - "302"
        - "303"
        - "304"
        - "305"
        - "307"
        - "308"
        - "400"
        - "401"
        - "402"
        - "403"
        - "404"
        - "405"
        - "406"
        - "407"
        - "408"
        - "409"
        - "410"
        - "411"
        - "412"
        - "413"
        - "414"
        - "415"
        - "416"
        - "417"
        - "418"
        - "419"
        - "420"
        - "421"
        - "422"
        - "423"
        - "424"
        - "426"
        - "428"
        - "429"
        - "431"
        - "451"
        - "500"
        - "501"
        - "502"
        - "503"
        - "504"
        - "505"
        - "506"
        - "507"
        - "508"
        - "509"
        - "510"
        - "511"
      statusCodeValue:
        type: "integer"
        format: "int32"
      body:
        type: "object"
        properties: {}
  GrantedAuthority:
    type: "object"
    properties:
      authority:
        type: "string"
  AccountDetails:
    type: "object"
    properties:
      type:
        type: "string"
      name:
        type: "string"
      requiredGroupMembership:
        type: "array"
        items:
          type: "string"
      cloudProvider:
        type: "string"
      skin:
        type: "string"
      primaryAccount:
        type: "boolean"
      environment:
        type: "string"
      accountId:
        type: "string"
      accountType:
        type: "string"
      providerVersion:
        type: "string"
      challengeDestructiveActions:
        type: "boolean"
      permissions:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
  HttpEntity:
    type: "object"
    properties:
      body:
        type: "object"
        properties: {}
