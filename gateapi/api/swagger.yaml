---
swagger: "2.0"
info:
  title: "Spinnaker API"
  contact: {}
host: "localhost"
basePath: "/"
tags:
- name: "amazon-infrastructure-controller"
  description: "Amazon Infrastructure Controller"
- name: "application-controller"
  description: "Application Controller"
- name: "artifact-controller"
  description: "Artifact Controller"
- name: "auth-controller"
  description: "Auth Controller"
- name: "bake-controller"
  description: "Bake Controller"
- name: "build-controller"
  description: "Build Controller"
- name: "cluster-controller"
  description: "Cluster Controller"
- name: "concourse-controller"
  description: "Concourse Controller"
- name: "credentials-controller"
  description: "Credentials Controller"
- name: "ecs-server-group-events-controller"
  description: "Ecs Server Group Events Controller"
- name: "executions-controller"
  description: "Executions Controller"
- name: "firewall-controller"
  description: "Firewall Controller"
- name: "image-controller"
  description: "Image Controller"
- name: "instance-controller"
  description: "Instance Controller"
- name: "job-controller"
  description: "Job Controller"
- name: "load-balancer-controller"
  description: "Load Balancer Controller"
- name: "network-controller"
  description: "Network Controller"
- name: "pipeline-config-controller"
  description: "Pipeline Config Controller"
- name: "pipeline-controller"
  description: "Pipeline Controller"
- name: "pipeline-templates-controller"
  description: "Pipeline Templates Controller"
- name: "project-controller"
  description: "Project Controller"
- name: "pubsub-subscription-controller"
  description: "Pubsub Subscription Controller"
- name: "reorder-pipelines-controller"
  description: "Reorder Pipelines Controller"
- name: "search-controller"
  description: "Search Controller"
- name: "security-group-controller"
  description: "Security Group Controller"
- name: "server-group-controller"
  description: "Server Group Controller"
- name: "server-group-manager-controller"
  description: "Server Group Manager Controller"
- name: "snapshot-controller"
  description: "Snapshot Controller"
- name: "subnet-controller"
  description: "Subnet Controller"
- name: "task-controller"
  description: "Task Controller"
- name: "v-2-canary-config-controller"
  description: "V 2 Canary Config Controller"
- name: "v-2-canary-controller"
  description: "V 2 Canary Controller"
- name: "v-2-pipeline-templates-controller"
  description: "V 2 Pipeline Templates Controller"
- name: "version-controller"
  description: "Version Controller"
- name: "webhook-controller"
  description: "Webhook Controller"
paths:
  /pipelines/{id}/stages/{stageId}/restart:
    put:
      tags:
      - "pipeline-controller"
      summary: "Restart a stage execution"
      operationId: "restartStageUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "context"
        description: "context"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Context"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/jobs:
    get:
      tags:
      - "build-controller"
      summary: "Get jobs for build master"
      description: "Deprecated, use the v3 endpoint instead"
      operationId: "getJobsForBuildMasterUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /networks:
    get:
      tags:
      - "network-controller"
      summary: "Retrieve a list of networks, grouped by cloud provider"
      operationId: "allUsingGET_2"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /loadBalancers/{name}:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a load balancer for a given cloud provider"
      operationId: "getLoadBalancerUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/serverGroups/{account}/{region}/{serverGroupName}:
    get:
      tags:
      - "server-group-controller"
      summary: "Retrieve a server group's details"
      operationId: "getServerGroupDetailsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "includeDetails"
        in: "query"
        description: "includeDetails"
        required: false
        type: "string"
        default: "true"
        x-exportParamName: "IncludeDetails"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /instances/{account}/{region}/{instanceId}:
    get:
      tags:
      - "instance-controller"
      summary: "Retrieve an instance's details"
      operationId: "getInstanceDetailsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "instanceId"
        in: "path"
        description: "instanceId"
        required: true
        type: "string"
        x-exportParamName: "InstanceId"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds:
    get:
      tags:
      - "build-controller"
      summary: "Get build masters"
      description: "Deprecated, use the v3 endpoint instead"
      operationId: "getBuildMastersUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "type"
        in: "query"
        description: "type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /version:
    get:
      tags:
      - "version-controller"
      summary: "Fetch Gate's current version"
      operationId: "getVersionUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Version"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /executions:
    get:
      tags:
      - "executions-controller"
      summary: "Retrieves an ad-hoc collection of executions based on a number of\
        \ user-supplied parameters. Either executionIds or pipelineConfigIds must\
        \ be supplied in order to return any results. If both are supplied, an exception\
        \ will be thrown."
      operationId: "getLatestExecutionsByConfigIdsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "executionIds"
        in: "query"
        description: "A comma-separated list of executions to retrieve. Either this\
          \ OR pipelineConfigIds must be supplied, but not both."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "ExecutionIds"
      - name: "expand"
        in: "query"
        description: "Expands each execution object in the resulting list. If this\
          \ value is missing, it is defaulted to true."
        required: false
        type: "boolean"
        default: true
        allowEmptyValue: false
        x-exportParamName: "Expand"
      - name: "limit"
        in: "query"
        description: "The number of executions to return per pipeline configuration.\
          \ Ignored if executionIds parameter is supplied. If this value is missing,\
          \ it is defaulted to 1."
        required: false
        type: "integer"
        allowEmptyValue: false
        format: "int32"
        x-exportParamName: "Limit"
      - name: "pipelineConfigIds"
        in: "query"
        description: "A comma-separated list of pipeline configuration IDs to retrieve\
          \ recent executions for. Either this OR pipelineConfigIds must be supplied,\
          \ but not both."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "PipelineConfigIds"
      - name: "statuses"
        in: "query"
        description: "A comma-separated list of execution statuses to filter by. Ignored\
          \ if executionIds parameter is supplied. If this value is missing, it is\
          \ defaulted to all statuses."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /loadBalancers/{account}/{region}/{name}:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a load balancer's details as a single element list for a\
        \ given account, region, cloud provider and load balancer name"
      operationId: "getLoadBalancerDetailsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/pipelineTemplates/plan:
    post:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "(ALPHA) Plan a pipeline template configuration."
      operationId: "planUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /artifacts/account/{accountName}/versions:
    get:
      tags:
      - "artifact-controller"
      summary: "Retrieve the list of artifact versions by account and artifact names"
      operationId: "artifactVersionsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "accountName"
        in: "path"
        description: "accountName"
        required: true
        type: "string"
        x-exportParamName: "AccountName"
      - name: "artifactName"
        in: "query"
        description: "artifactName"
        required: true
        type: "string"
        x-exportParamName: "ArtifactName"
      - name: "type"
        in: "query"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "string"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/functions:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get application functions"
      operationId: "applicationFunctionsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/serverGroups/{account}/{serverGroupName}/events:
    get:
      tags:
      - "ecs-server-group-events-controller"
      summary: "Retrieves a list of events for a server group"
      operationId: "getEventsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "provider"
        in: "query"
        description: "provider"
        required: true
        type: "string"
        x-exportParamName: "Provider"
      - name: "region"
        in: "query"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/pipelineTemplates/{id}:
    get:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "(ALPHA) Get a pipeline template."
      operationId: "getUsingGET_2"
      produces:
      - "*/*"
      parameters:
      - name: "digest"
        in: "query"
        description: "digest"
        required: false
        type: "string"
        x-exportParamName: "Digest"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag"
        in: "query"
        description: "tag"
        required: false
        type: "string"
        x-exportParamName: "Tag"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "Delete a pipeline template."
      operationId: "deleteUsingDELETE_1"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "digest"
        in: "query"
        description: "digest"
        required: false
        type: "string"
        x-exportParamName: "Digest"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "tag"
        in: "query"
        description: "tag"
        required: false
        type: "string"
        x-exportParamName: "Tag"
      responses:
        202:
          description: "Accepted"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /images/tags:
    get:
      tags:
      - "image-controller"
      summary: "Find tags"
      operationId: "findTagsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "query"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "repository"
        in: "query"
        description: "repository"
        required: true
        type: "string"
        x-exportParamName: "Repository"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/stages/{stageId}:
    patch:
      tags:
      - "pipeline-controller"
      summary: "Update a stage execution"
      operationId: "updateStageUsingPATCH"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "context"
        description: "context"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Context"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /actions/pipelines/reorder:
    post:
      tags:
      - "reorder-pipelines-controller"
      summary: "Re-order pipelines"
      operationId: "reorderPipelinesUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "reorderPipelinesCommand"
        description: "reorderPipelinesCommand"
        required: true
        schema:
          $ref: "#/definitions/ReorderPipelinesCommand"
        x-exportParamName: "ReorderPipelinesCommand"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/executions/search:
    get:
      tags:
      - "executions-controller"
      summary: "Search for pipeline executions using a combination of criteria. The\
        \ returned list is sorted by buildTime (trigger time) in reverse order so\
        \ that newer executions are first in the list."
      operationId: "searchForPipelineExecutionsByTriggerUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "Only includes executions that are part of this application.\
          \ If this value is \"*\", results will include executions of all applications."
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "eventId"
        in: "query"
        description: "Only includes executions that were triggered by a trigger with\
          \ this eventId."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "EventId"
      - name: "expand"
        in: "query"
        description: "Expands each execution object in the resulting list. If this\
          \ value is missing, it is defaulted to false."
        required: false
        type: "boolean"
        default: false
        allowEmptyValue: false
        x-example: false
        x-exportParamName: "Expand"
      - name: "pipelineName"
        in: "query"
        description: "Only includes executions that with this pipeline name."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "PipelineName"
      - name: "reverse"
        in: "query"
        description: "Reverses the resulting list before it is paginated. If this\
          \ value is missing, it is defaulted to false."
        required: false
        type: "boolean"
        default: false
        allowEmptyValue: false
        x-example: false
        x-exportParamName: "Reverse"
      - name: "size"
        in: "query"
        description: "Sets the size of the resulting list for pagination. This value\
          \ must be > 0. If this value is missing, it is defaulted to 10."
        required: false
        type: "integer"
        default: 10
        allowEmptyValue: false
        format: "int32"
        x-exportParamName: "Size"
      - name: "startIndex"
        in: "query"
        description: "Sets the first item of the resulting list for pagination. The\
          \ list is 0-indexed. This value must be >= 0. If this value is missing,\
          \ it is defaulted to 0."
        required: false
        type: "integer"
        default: 0
        allowEmptyValue: false
        format: "int32"
        x-exportParamName: "StartIndex"
      - name: "statuses"
        in: "query"
        description: "Only includes executions with a status that is equal to a status\
          \ provided in this field. The list of statuses should be given as a comma-delimited\
          \ string. If this value is missing, includes executions of all statuses.\
          \ Allowed statuses are: NOT_STARTED, RUNNING, PAUSED, SUSPENDED, SUCCEEDED,\
          \ FAILED_CONTINUE, TERMINAL, CANCELED, REDIRECT, STOPPED, SKIPPED, BUFFERED."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "Statuses"
      - name: "trigger"
        in: "query"
        description: "Only includes executions that were triggered by a trigger that\
          \ matches the subset of fields provided by this value. This value should\
          \ be a base64-encoded string of a JSON representation of a trigger object.\
          \ The comparison succeeds if the execution trigger contains all the fields\
          \ of the input trigger, the fields are of the same type, and each value\
          \ of the field \"matches\". The term \"matches\" is specific for each field's\
          \ type:\n- For Strings: A String value in the execution's trigger matches\
          \ the input trigger's String value if the former equals the latter (case-insensitive)\
          \ OR if the former matches the latter as a regular expression.\n- For Maps:\
          \ A Map value in the execution's trigger matches the input trigger's Map\
          \ value if the former contains all keys of the latter and their values match.\n\
          - For Collections: A Collection value in the execution's trigger matches\
          \ the input trigger's Collection value if the former has a unique element\
          \ that matches each element of the latter.\n- Every other value is compared\
          \ using the Java \"equals\" method (Groovy \"==\" operator)"
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "Trigger"
      - name: "triggerTimeEndBoundary"
        in: "query"
        description: "Only includes executions that were built at or before the given\
          \ time, represented as a Unix timestamp in ms (UTC). This value must be\
          \ <= 9223372036854775807 (Long.MAX_VALUE) and >= the value of [triggerTimeStartBoundary],\
          \ if provided. If this value is missing, it is defaulted to 9223372036854775807."
        required: false
        type: "integer"
        default: 9223372036854775807
        allowEmptyValue: false
        format: "int64"
        x-exportParamName: "TriggerTimeEndBoundary"
      - name: "triggerTimeStartBoundary"
        in: "query"
        description: "Only includes executions that were built at or after the given\
          \ time, represented as a Unix timestamp in ms (UTC). This value must be\
          \ >= 0 and <= the value of [triggerTimeEndBoundary], if provided. If this\
          \ value is missing, it is defaulted to 0."
        required: false
        type: "integer"
        default: 0
        allowEmptyValue: false
        format: "int64"
        x-exportParamName: "TriggerTimeStartBoundary"
      - name: "triggerTypes"
        in: "query"
        description: "Only includes executions that were triggered by a trigger with\
          \ a type that is equal to a type provided in this field. The list of trigger\
          \ types should be a comma-delimited string. If this value is missing, results\
          \ will includes executions of all trigger types."
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "TriggerTypes"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/snapshots/{account}/history:
    get:
      tags:
      - "snapshot-controller"
      summary: "Get snapshot history"
      operationId: "getSnapshotHistoryUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/pipelineTemplates/update/{id}:
    post:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "(ALPHA) Update a pipeline template."
      operationId: "updateUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "pipelineTemplate"
        description: "pipelineTemplate"
        required: true
        schema:
          type: "object"
        x-exportParamName: "PipelineTemplate"
      - name: "skipPlanDependents"
        in: "query"
        description: "skipPlanDependents"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SkipPlanDependents"
      - name: "tag"
        in: "query"
        description: "tag"
        required: false
        type: "string"
        x-exportParamName: "Tag"
      responses:
        201:
          description: "Created"
        202:
          description: "Accepted"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/pipelineConfigs/{pipelineName}:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a pipeline configuration"
      operationId: "getPipelineConfigUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineName"
        in: "path"
        description: "pipelineName"
        required: true
        type: "string"
        x-exportParamName: "PipelineName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "application-controller"
      summary: "Invoke pipeline config"
      operationId: "invokePipelineConfigUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineName"
        in: "path"
        description: "pipelineName"
        required: true
        type: "string"
        x-exportParamName: "PipelineName"
      - in: "body"
        name: "trigger"
        description: "trigger"
        required: false
        schema:
          type: "object"
        x-exportParamName: "Trigger"
      - name: "user"
        in: "query"
        description: "user"
        required: false
        type: "string"
        x-exportParamName: "User"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HttpEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /credentials:
    get:
      tags:
      - "credentials-controller"
      summary: "Retrieve a list of accounts"
      operationId: "getAccountsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "accountNonExpired"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "AccountNonExpired"
      - name: "accountNonLocked"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "AccountNonLocked"
      - name: "allowedAccounts"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AllowedAccounts"
      - name: "authorities[0].authority"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Authorities0Authority"
      - name: "credentialsNonExpired"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "CredentialsNonExpired"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
      - name: "enabled"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "Enabled"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "boolean"
        x-exportParamName: "Expand"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FirstName"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "LastName"
      - name: "password"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Password"
      - name: "roles"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Roles"
      - name: "username"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Username"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/cancel:
    put:
      tags:
      - "pipeline-controller"
      summary: "Cancel a pipeline execution"
      operationId: "cancelPipelineUsingPUT_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "force"
        in: "query"
        description: "force"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Force"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "reason"
        in: "query"
        description: "reason"
        required: false
        type: "string"
        x-exportParamName: "Reason"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/canary:
    post:
      tags:
      - "v-2-canary-controller"
      summary: "Start a canary execution with the supplied canary config"
      operationId: "initiateCanaryWithConfigUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "adhocExecutionRequest"
        description: "adhocExecutionRequest"
        required: true
        schema:
          type: "object"
        x-exportParamName: "AdhocExecutionRequest"
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "parentPipelineExecutionId"
        in: "query"
        description: "parentPipelineExecutionId"
        required: false
        type: "string"
        x-exportParamName: "ParentPipelineExecutionId"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /projects/{id}:
    get:
      tags:
      - "project-controller"
      summary: "Get a project"
      operationId: "getUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/snapshots/{account}:
    get:
      tags:
      - "snapshot-controller"
      summary: "Get current snapshot"
      operationId: "getCurrentSnapshotUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v3/builds/{buildMaster}/build/{number}:
    get:
      tags:
      - "build-controller"
      summary: "Get build for build master"
      operationId: "v3GetBuildUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "job"
        in: "query"
        description: "job"
        required: true
        type: "string"
        x-exportParamName: "Job"
      - name: "number"
        in: "path"
        description: "number"
        required: true
        type: "string"
        x-exportParamName: "Number"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks/{id}/cancel:
    put:
      tags:
      - "task-controller"
      summary: "Cancel task"
      operationId: "cancelTaskUsingPUT_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/metricSetPairList/{metricSetPairListId}:
    get:
      tags:
      - "v-2-canary-controller"
      summary: "Retrieve a metric set pair list"
      operationId: "getMetricSetPairListUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "metricSetPairListId"
        in: "path"
        description: "metricSetPairListId"
        required: true
        type: "string"
        x-exportParamName: "MetricSetPairListId"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /webhooks/preconfigured:
    get:
      tags:
      - "webhook-controller"
      summary: "Retrieve a list of preconfigured webhooks in Orca"
      operationId: "preconfiguredWebhooksUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /securityGroups/{account}/{region}/{name}:
    get:
      tags:
      - "security-group-controller"
      summary: "Retrieve a security group's details"
      operationId: "getSecurityGroupUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "vpcId"
        in: "query"
        description: "vpcId"
        required: false
        type: "string"
        x-exportParamName: "VpcId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaryConfig/{id}:
    get:
      tags:
      - "v-2-canary-config-controller"
      summary: "Retrieve a canary configuration by id"
      operationId: "getCanaryConfigUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "v-2-canary-config-controller"
      summary: "Update a canary configuration"
      operationId: "updateCanaryConfigUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "config"
        description: "config"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Config"
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "v-2-canary-config-controller"
      summary: "Delete a canary configuration"
      operationId: "deleteCanaryConfigUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /images/find:
    get:
      tags:
      - "image-controller"
      summary: "Retrieve a list of images, filtered by cloud provider, region, and\
        \ account"
      description: "The query parameter `q` filters the list of images by image name"
      operationId: "findImagesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "query"
        description: "account"
        required: false
        type: "string"
        x-exportParamName: "Account"
      - name: "count"
        in: "query"
        description: "count"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Count"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "q"
        in: "query"
        description: "q"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "region"
        in: "query"
        description: "region"
        required: false
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaryConfig:
    get:
      tags:
      - "v-2-canary-config-controller"
      summary: "Retrieve a list of canary configurations"
      operationId: "getCanaryConfigsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "v-2-canary-config-controller"
      summary: "Create a canary configuration"
      operationId: "createCanaryConfigUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "config"
        description: "config"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Config"
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /projects/{id}/pipelines:
    get:
      tags:
      - "project-controller"
      summary: "Get all pipelines for project"
      operationId: "allPipelinesForProjectUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 5
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelineConfigs:
    get:
      tags:
      - "pipeline-config-controller"
      summary: "Get all pipeline configs."
      operationId: "getAllPipelineConfigsUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/serverGroups:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of server groups for a cluster"
      operationId: "getServerGroupsUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/jobs/**:
    get:
      tags:
      - "build-controller"
      summary: "Get job config"
      description: "Deprecated, use the v3 endpoint instead"
      operationId: "getJobConfigUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelineTemplates:
    get:
      tags:
      - "pipeline-templates-controller"
      summary: "List pipeline templates."
      operationId: "listUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "scopes"
        in: "query"
        description: "scopes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Scopes"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "pipeline-templates-controller"
      summary: "Create a pipeline template."
      operationId: "createUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipelineTemplate"
        description: "pipelineTemplate"
        required: true
        schema:
          type: "object"
        x-exportParamName: "PipelineTemplate"
      responses:
        201:
          description: "Created"
        202:
          description: "Accepted"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/{stageId}/evaluateExpression:
    get:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    head:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingHEAD"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    post:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    options:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingOPTIONS"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    patch:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression at a specific stage using the provided\
        \ execution as context"
      operationId: "evaluateExpressionForExecutionAtStageUsingPATCH"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "stageId"
        in: "path"
        description: "stageId"
        required: true
        type: "string"
        x-exportParamName: "StageId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /v2/canaries/judges:
    get:
      tags:
      - "v-2-canary-controller"
      summary: "Retrieve a list of all configured canary judges"
      operationId: "listJudgesUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/resume:
    put:
      tags:
      - "pipeline-controller"
      summary: "Resume a pipeline execution"
      operationId: "resumePipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/strategyConfigs/{strategyName}:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a pipeline strategy configuration"
      operationId: "getStrategyConfigUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "strategyName"
        in: "path"
        description: "strategyName"
        required: true
        type: "string"
        x-exportParamName: "StrategyName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelineConfigs/{pipelineConfigId}/convertToTemplate:
    get:
      tags:
      - "pipeline-config-controller"
      summary: "Convert a pipeline config to a pipeline template."
      operationId: "convertPipelineConfigToPipelineTemplateUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "pipelineConfigId"
        in: "path"
        description: "pipelineConfigId"
        required: true
        type: "string"
        x-exportParamName: "PipelineConfigId"
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /images/{account}/{region}/{imageId}:
    get:
      tags:
      - "image-controller"
      summary: "Get image details"
      operationId: "getImageDetailsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "imageId"
        in: "path"
        description: "imageId"
        required: true
        type: "string"
        x-exportParamName: "ImageId"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/loadBalancers:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a list of load balancers for a given application"
      operationId: "getApplicationLoadBalancersUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /artifacts/credentials:
    get:
      tags:
      - "artifact-controller"
      summary: "Retrieve the list of artifact accounts configured in Clouddriver."
      operationId: "allUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelineConfigs/{pipelineConfigId}/history:
    get:
      tags:
      - "pipeline-config-controller"
      summary: "Get pipeline config history."
      operationId: "getPipelineConfigHistoryUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      - name: "pipelineConfigId"
        in: "path"
        description: "pipelineConfigId"
        required: true
        type: "string"
        x-exportParamName: "PipelineConfigId"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/move:
    post:
      tags:
      - "pipeline-controller"
      summary: "Rename a pipeline definition"
      operationId: "renamePipelineUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "renameCommand"
        description: "renameCommand"
        required: true
        schema:
          type: "object"
        x-exportParamName: "RenameCommand"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks/{id}/details/{taskDetailsId}:
    get:
      tags:
      - "application-controller"
      summary: "Get task details"
      operationId: "getTaskDetailsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "taskDetailsId"
        in: "path"
        description: "taskDetailsId"
        required: true
        type: "string"
        x-exportParamName: "TaskDetailsId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /tasks/{id}/details/{taskDetailsId}:
    get:
      tags:
      - "task-controller"
      summary: "Get task details"
      operationId: "getTaskDetailsUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "taskDetailsId"
        in: "path"
        description: "taskDetailsId"
        required: true
        type: "string"
        x-exportParamName: "TaskDetailsId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/start:
    post:
      tags:
      - "pipeline-controller"
      summary: "Initiate a pipeline execution"
      operationId: "startUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ResponseEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/{application}/executions:
    get:
      tags:
      - "v-2-canary-controller"
      summary: "Retrieve a list of an application's canary results"
      operationId: "getCanaryResultsByApplicationUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: true
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "Comma-separated list of statuses, e.g.: RUNNING, SUCCEEDED,\
          \ TERMINAL"
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "Statuses"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelineTemplates/{id}/dependents:
    get:
      tags:
      - "pipeline-templates-controller"
      summary: "List all pipelines that implement a pipeline template"
      operationId: "listPipelineTemplateDependentsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "recursive"
        in: "query"
        description: "recursive"
        required: false
        type: "boolean"
        x-exportParamName: "Recursive"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/pipelineTemplates/{id}/dependents:
    get:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "(ALPHA) List all pipelines that implement a pipeline template"
      operationId: "listPipelineTemplateDependentsUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /subnets:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get subnets"
      operationId: "subnetsUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/jobs:
    get:
      tags:
      - "concourse-controller"
      summary: "Retrieve the list of job names for a given pipeline available to triggers"
      operationId: "jobsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "pipeline"
        in: "path"
        description: "pipeline"
        required: true
        type: "string"
        x-exportParamName: "Pipeline"
      - name: "team"
        in: "path"
        description: "team"
        required: true
        type: "string"
        x-exportParamName: "Team"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}:
    get:
      tags:
      - "pipeline-controller"
      summary: "Retrieve a pipeline execution"
      operationId: "getPipelineUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "pipeline-controller"
      summary: "Update a pipeline definition"
      operationId: "updatePipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "pipeline-controller"
      summary: "Delete a pipeline execution"
      operationId: "deletePipelineUsingDELETE_1"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /auth/redirect:
    get:
      tags:
      - "auth-controller"
      summary: "Redirect to Deck"
      operationId: "redirectUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "to"
        in: "query"
        description: "to"
        required: true
        type: "string"
        x-exportParamName: "To"
      responses:
        200:
          description: "OK"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's tasks"
      operationId: "getTasksUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
      - name: "page"
        in: "query"
        description: "page"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Page"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "application-controller"
      summary: "Create task"
      operationId: "taskUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /securityGroups/{account}:
    get:
      tags:
      - "security-group-controller"
      summary: "Retrieve a list of security groups for a given account, grouped by\
        \ region"
      operationId: "allByAccountUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v3/builds:
    get:
      tags:
      - "build-controller"
      summary: "Get build masters"
      operationId: "v3GetBuildMastersUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "type"
        in: "query"
        description: "type"
        required: false
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{id}/pause:
    put:
      tags:
      - "pipeline-controller"
      summary: "Pause a pipeline execution"
      operationId: "pausePipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /bakery/options:
    get:
      tags:
      - "bake-controller"
      summary: "Retrieve a list of available bakery base images, grouped by cloud\
        \ provider"
      operationId: "bakeOptionsUsingGET_1"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelineTemplates/{id}:
    get:
      tags:
      - "pipeline-templates-controller"
      summary: "Get a pipeline template."
      operationId: "getUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    post:
      tags:
      - "pipeline-templates-controller"
      summary: "Update a pipeline template."
      operationId: "updateUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "pipelineTemplate"
        description: "pipelineTemplate"
        required: true
        schema:
          type: "object"
        x-exportParamName: "PipelineTemplate"
      - name: "skipPlanDependents"
        in: "query"
        description: "skipPlanDependents"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "SkipPlanDependents"
      responses:
        201:
          description: "Created"
        202:
          description: "Accepted"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "pipeline-templates-controller"
      summary: "Delete a pipeline template."
      operationId: "deleteUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        202:
          description: "Accepted"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /pipelines/{application}/{pipelineNameOrId}:
    post:
      tags:
      - "pipeline-controller"
      summary: "Trigger a pipeline execution"
      operationId: "invokePipelineConfigUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineNameOrId"
        in: "path"
        description: "pipelineNameOrId"
        required: true
        type: "string"
        x-exportParamName: "PipelineNameOrId"
      - in: "body"
        name: "trigger"
        description: "trigger"
        required: false
        schema:
          type: "object"
        x-exportParamName: "Trigger"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HttpEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks/{id}/cancel:
    put:
      tags:
      - "application-controller"
      summary: "Cancel task"
      operationId: "cancelTaskUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /pipelines/{id}/evaluateExpression:
    get:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    head:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingHEAD"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    post:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionViaPOSTUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - in: "body"
        name: "pipelineExpression"
        description: "pipelineExpression"
        required: true
        schema:
          type: "object"
        x-exportParamName: "PipelineExpression"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    put:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    options:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingOPTIONS"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
    patch:
      tags:
      - "pipeline-controller"
      summary: "Evaluate a pipeline expression using the provided execution as context"
      operationId: "evaluateExpressionForExecutionUsingPATCH"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "expression"
        in: "query"
        description: "expression"
        required: true
        type: "string"
        x-exportParamName: "Expression"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /applications/{application}/strategyConfigs:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's pipeline strategy configurations"
      operationId: "getStrategyConfigsForApplicationUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks/cancel:
    put:
      tags:
      - "task-controller"
      summary: "Cancel tasks"
      operationId: "cancelTasksUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "ids"
        in: "query"
        description: "ids"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Ids"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /instanceTypes:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get instance types"
      operationId: "instanceTypesUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/canary/{canaryConfigId}:
    post:
      tags:
      - "v-2-canary-controller"
      summary: "Start a canary execution"
      operationId: "initiateCanaryUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "query"
        description: "application"
        required: false
        type: "string"
        x-exportParamName: "Application"
      - name: "canaryConfigId"
        in: "path"
        description: "canaryConfigId"
        required: true
        type: "string"
        x-exportParamName: "CanaryConfigId"
      - name: "configurationAccountName"
        in: "query"
        description: "configurationAccountName"
        required: false
        type: "string"
        x-exportParamName: "ConfigurationAccountName"
      - in: "body"
        name: "executionRequest"
        description: "executionRequest"
        required: true
        schema:
          type: "object"
        x-exportParamName: "ExecutionRequest"
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      - name: "parentPipelineExecutionId"
        in: "query"
        description: "parentPipelineExecutionId"
        required: false
        type: "string"
        x-exportParamName: "ParentPipelineExecutionId"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pubsub/subscriptions:
    get:
      tags:
      - "pubsub-subscription-controller"
      summary: "Retrieve the list of pub/sub subscriptions configured in Echo."
      operationId: "allUsingGET_4"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MapÂ«string,stringÂ»"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/pipelines:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's pipeline executions"
      operationId: "getPipelinesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "boolean"
        x-exportParamName: "Expand"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        format: "int32"
        x-exportParamName: "Limit"
      - name: "statuses"
        in: "query"
        description: "statuses"
        required: false
        type: "string"
        x-exportParamName: "Statuses"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of cluster names for an application, grouped by account"
      operationId: "getClustersUsingGET_2"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/serverGroupManagers:
    get:
      tags:
      - "server-group-manager-controller"
      summary: "Retrieve a list of server group managers for an application"
      operationId: "getServerGroupManagersForApplicationUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /vpcs:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get VPCs"
      operationId: "vpcsUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /bakery/logs/{region}/{statusId}:
    get:
      tags:
      - "bake-controller"
      summary: "Retrieve the logs for a given bake"
      operationId: "lookupLogsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "statusId"
        in: "path"
        description: "statusId"
        required: true
        type: "string"
        x-exportParamName: "StatusId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /projects:
    get:
      tags:
      - "project-controller"
      summary: "Get all projects"
      operationId: "allUsingGET_3"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v3/builds/{buildMaster}/jobs:
    get:
      tags:
      - "build-controller"
      summary: "Get jobs for build master"
      operationId: "v3GetJobsForBuildMasterUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v3/builds/{buildMaster}/job:
    get:
      tags:
      - "build-controller"
      summary: "Get job config"
      operationId: "v3GetJobConfigUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "job"
        in: "query"
        description: "job"
        required: true
        type: "string"
        x-exportParamName: "Job"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /instances/{account}/{region}/{instanceId}/console:
    get:
      tags:
      - "instance-controller"
      summary: "Retrieve an instance's console output"
      operationId: "getConsoleOutputUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "instanceId"
        in: "path"
        description: "instanceId"
        required: true
        type: "string"
        x-exportParamName: "InstanceId"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/pipelineTemplates:
    get:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "(ALPHA) List pipeline templates."
      operationId: "listUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "scopes"
        in: "query"
        description: "scopes"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Scopes"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/credentials:
    get:
      tags:
      - "v-2-canary-controller"
      summary: "Retrieve a list of configured Kayenta accounts"
      operationId: "listCredentialsUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /artifacts/{provider}/{packageName}/{version}:
    get:
      tags:
      - "artifact-controller"
      summary: "Retrieve the specified artifact version for an artifact provider and\
        \ package name"
      operationId: "getArtifactUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "packageName"
        in: "path"
        description: "packageName"
        required: true
        type: "string"
        x-exportParamName: "PackageName"
      - name: "provider"
        in: "path"
        description: "provider"
        required: true
        type: "string"
        x-exportParamName: "Provider"
      - name: "version"
        in: "path"
        description: "version"
        required: true
        type: "string"
        x-exportParamName: "Version"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/pipelines/{id}/cancel:
    put:
      tags:
      - "application-controller"
      summary: "Cancel pipeline"
      operationId: "cancelPipelineUsingPUT"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "reason"
        in: "query"
        description: "reason"
        required: false
        type: "string"
        x-exportParamName: "Reason"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /applications/{application}:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve an application's details"
      operationId: "getApplicationUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "Expand"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/{cloudProvider}/{scope}/serverGroups/target/{target}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a server group that matches a target coordinate (e.g., newest,\
        \ ancestor) relative to a cluster"
      description: "`scope` is either a zone or a region"
      operationId: "getTargetServerGroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "onlyEnabled"
        in: "query"
        description: "onlyEnabled"
        required: false
        type: "boolean"
        x-exportParamName: "OnlyEnabled"
      - name: "scope"
        in: "path"
        description: "scope"
        required: true
        type: "string"
        x-exportParamName: "Scope"
      - name: "target"
        in: "path"
        description: "target"
        required: true
        type: "string"
        x-exportParamName: "Target"
      - name: "validateOldest"
        in: "query"
        description: "validateOldest"
        required: false
        type: "boolean"
        x-exportParamName: "ValidateOldest"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/user:
    get:
      tags:
      - "auth-controller"
      summary: "Get user"
      operationId: "userUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /projects/{id}/clusters:
    get:
      tags:
      - "project-controller"
      summary: "Get a project's clusters"
      operationId: "getClustersUsingGET_3"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /firewalls/{account}:
    get:
      tags:
      - "firewall-controller"
      summary: "Retrieve a list of firewalls for a given account, grouped by region"
      operationId: "allByAccountUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /networks/{cloudProvider}:
    get:
      tags:
      - "network-controller"
      summary: "Retrieve a list of networks for a given cloud provider"
      operationId: "allByCloudProviderUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v3/builds/{buildMaster}/builds:
    get:
      tags:
      - "build-controller"
      summary: "Get builds for build master"
      operationId: "v3GetBuildsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "job"
        in: "query"
        description: "job"
        required: true
        type: "string"
        x-exportParamName: "Job"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /credentials/{account}:
    get:
      tags:
      - "credentials-controller"
      summary: "Retrieve an account's details"
      operationId: "getAccountUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "accountNonExpired"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "AccountNonExpired"
      - name: "accountNonLocked"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "AccountNonLocked"
      - name: "allowedAccounts"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "AllowedAccounts"
      - name: "authorities[0].authority"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Authorities0Authority"
      - name: "credentialsNonExpired"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "CredentialsNonExpired"
      - name: "email"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Email"
      - name: "enabled"
        in: "query"
        required: false
        type: "boolean"
        x-exportParamName: "Enabled"
      - name: "firstName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "FirstName"
      - name: "lastName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "LastName"
      - name: "password"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Password"
      - name: "roles"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Roles"
      - name: "username"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "Username"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/AccountDetails"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/tasks/{id}:
    get:
      tags:
      - "application-controller"
      summary: "Get task"
      operationId: "getTaskUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
      deprecated: true
  /pipelineTemplates/resolve:
    get:
      tags:
      - "pipeline-templates-controller"
      summary: "Resolve a pipeline template."
      operationId: "resolveTemplatesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "executionId"
        in: "query"
        description: "executionId"
        required: false
        type: "string"
        x-exportParamName: "ExecutionId"
      - name: "pipelineConfigId"
        in: "query"
        description: "pipelineConfigId"
        required: false
        type: "string"
        x-exportParamName: "PipelineConfigId"
      - name: "source"
        in: "query"
        description: "source"
        required: true
        type: "string"
        x-exportParamName: "Source"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/jobs/{account}/{region}/{name}:
    get:
      tags:
      - "job-controller"
      summary: "Get job"
      operationId: "getJobUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "string"
        default: "false"
        x-exportParamName: "Expand"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /loadBalancers:
    get:
      tags:
      - "load-balancer-controller"
      summary: "Retrieve a list of load balancers for a given cloud provider"
      operationId: "getAllUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}/scalingActivities:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of scaling activities for a server group"
      operationId: "getScalingActivitiesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "query"
        description: "region"
        required: false
        type: "string"
        x-exportParamName: "Region"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/metadata/metricsService:
    get:
      tags:
      - "v-2-canary-controller"
      summary: "Retrieve a list of descriptors for use in populating the canary config\
        \ ui"
      operationId: "listMetricsServiceMetadataUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "filter"
        in: "query"
        description: "filter"
        required: false
        type: "string"
        x-exportParamName: "Filter"
      - name: "metricsAccountName"
        in: "query"
        description: "metricsAccountName"
        required: false
        type: "string"
        x-exportParamName: "MetricsAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a cluster's details"
      operationId: "getClustersUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/serverGroups/{serverGroupName}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a server group's details"
      operationId: "getServerGroupsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "serverGroupName"
        in: "path"
        description: "serverGroupName"
        required: true
        type: "string"
        x-exportParamName: "ServerGroupName"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/{application}/{pipelineName}:
    delete:
      tags:
      - "pipeline-controller"
      summary: "Delete a pipeline definition"
      operationId: "deletePipelineUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineName"
        in: "path"
        description: "pipelineName"
        required: true
        type: "string"
        x-exportParamName: "PipelineName"
      responses:
        200:
          description: "OK"
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /concourse/{buildMaster}/teams/{team}/pipelines:
    get:
      tags:
      - "concourse-controller"
      summary: "Retrieve the list of pipeline names for a given team available to\
        \ triggers"
      operationId: "pipelinesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "team"
        in: "path"
        description: "team"
        required: true
        type: "string"
        x-exportParamName: "Team"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /functions:
    get:
      tags:
      - "amazon-infrastructure-controller"
      summary: "Get functions"
      operationId: "functionsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "query"
        description: "account"
        required: false
        type: "string"
        x-exportParamName: "Account"
      - name: "functionName"
        in: "query"
        description: "functionName"
        required: false
        type: "string"
        x-exportParamName: "FunctionName"
      - name: "region"
        in: "query"
        description: "region"
        required: false
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/build/{number}/**:
    get:
      tags:
      - "build-controller"
      summary: "Get build for build master"
      description: "Deprecated, use the v3 endpoint instead"
      operationId: "getBuildUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "number"
        in: "path"
        description: "number"
        required: true
        type: "string"
        x-exportParamName: "Number"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines:
    post:
      tags:
      - "pipeline-controller"
      summary: "Save a pipeline definition"
      operationId: "savePipelineUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipeline"
        description: "pipeline"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Pipeline"
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /pipelines/v2/{application}/{pipelineNameOrId}:
    post:
      tags:
      - "pipeline-controller"
      summary: "Trigger a pipeline execution"
      operationId: "invokePipelineConfigViaEchoUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "pipelineNameOrId"
        in: "path"
        description: "pipelineNameOrId"
        required: true
        type: "string"
        x-exportParamName: "PipelineNameOrId"
      - in: "body"
        name: "trigger"
        description: "trigger"
        required: false
        schema:
          type: "object"
        x-exportParamName: "Trigger"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/HttpEntity"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /firewalls/{account}/{region}:
    get:
      tags:
      - "firewall-controller"
      summary: "Retrieve a list of firewalls for a given account and region"
      operationId: "allByAccountAndRegionUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /search:
    get:
      tags:
      - "search-controller"
      summary: "Search infrastructure"
      operationId: "searchUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "allowShortQuery"
        in: "query"
        description: "allowShortQuery"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "AllowShortQuery"
      - name: "page"
        in: "query"
        description: "page"
        required: false
        type: "integer"
        default: 1
        format: "int32"
        x-exportParamName: "Page"
      - name: "pageSize"
        in: "query"
        description: "pageSize"
        required: false
        type: "integer"
        default: 10000
        format: "int32"
        x-exportParamName: "PageSize"
      - name: "platform"
        in: "query"
        description: "platform"
        required: false
        type: "string"
        x-exportParamName: "Platform"
      - name: "q"
        in: "query"
        description: "q"
        required: false
        type: "string"
        x-exportParamName: "Q"
      - name: "type"
        in: "query"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/pipelineConfigs:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's pipeline configurations"
      operationId: "getPipelineConfigsForApplicationUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /webhooks/{type}/{source}:
    post:
      tags:
      - "webhook-controller"
      summary: "Endpoint for posting webhooks to Spinnaker's webhook service"
      operationId: "webhooksUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - name: "X-Event-Key"
        in: "header"
        description: "X-Event-Key"
        required: false
        type: "string"
        x-exportParamName: "XEventKey"
      - name: "X-Hub-Signature"
        in: "header"
        description: "X-Hub-Signature"
        required: false
        type: "string"
        x-exportParamName: "XHubSignature"
      - in: "body"
        name: "event"
        description: "event"
        required: false
        schema:
          type: "object"
        x-exportParamName: "Event"
      - name: "source"
        in: "path"
        description: "source"
        required: true
        type: "string"
        x-exportParamName: "Source"
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /tasks/{id}:
    get:
      tags:
      - "task-controller"
      summary: "Get task"
      operationId: "getTaskUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
    delete:
      tags:
      - "task-controller"
      summary: "Delete task"
      operationId: "deleteTaskUsingDELETE"
      produces:
      - "*/*"
      parameters:
      - name: "id"
        in: "path"
        description: "id"
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        204:
          description: "No Content"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
  /tasks:
    post:
      tags:
      - "task-controller"
      summary: "Create task"
      operationId: "taskUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "map"
        description: "map"
        required: true
        schema:
          type: "object"
        x-exportParamName: "Map_"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/roles/sync:
    post:
      tags:
      - "auth-controller"
      summary: "Sync user roles"
      operationId: "syncUsingPOST"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /bakery/options/{cloudProvider}:
    get:
      tags:
      - "bake-controller"
      summary: "Retrieve a list of available bakery base images for a given cloud\
        \ provider"
      operationId: "bakeOptionsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /concourse/{buildMaster}/teams/{team}/pipelines/{pipeline}/resources:
    get:
      tags:
      - "concourse-controller"
      summary: "Retrieve the list of resource names for a given pipeline available\
        \ to the Concourse stage"
      operationId: "resourcesUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      - name: "pipeline"
        in: "path"
        description: "pipeline"
        required: true
        type: "string"
        x-exportParamName: "Pipeline"
      - name: "team"
        in: "path"
        description: "team"
        required: true
        type: "string"
        x-exportParamName: "Team"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/canaries/canary/{canaryConfigId}/{canaryExecutionId}:
    get:
      tags:
      - "v-2-canary-controller"
      summary: "Retrieve a canary result"
      operationId: "getCanaryResultUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "canaryConfigId"
        in: "path"
        description: "canaryConfigId"
        required: true
        type: "string"
        x-exportParamName: "CanaryConfigId"
      - name: "canaryExecutionId"
        in: "path"
        description: "canaryExecutionId"
        required: true
        type: "string"
        x-exportParamName: "CanaryExecutionId"
      - name: "storageAccountName"
        in: "query"
        description: "storageAccountName"
        required: false
        type: "string"
        x-exportParamName: "StorageAccountName"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /subnets/{cloudProvider}:
    get:
      tags:
      - "subnet-controller"
      summary: "Retrieve a list of subnets for a given cloud provider"
      operationId: "allByCloudProviderUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "cloudProvider"
        in: "path"
        description: "cloudProvider"
        required: true
        type: "string"
        x-exportParamName: "CloudProvider"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/pipelineTemplates/create:
    post:
      tags:
      - "v-2-pipeline-templates-controller"
      summary: "(ALPHA) Create a pipeline template."
      operationId: "createUsingPOST_1"
      consumes:
      - "application/json"
      produces:
      - "*/*"
      parameters:
      - in: "body"
        name: "pipelineTemplate"
        description: "pipelineTemplate"
        required: true
        schema:
          type: "object"
        x-exportParamName: "PipelineTemplate"
      - name: "tag"
        in: "query"
        description: "tag"
        required: false
        type: "string"
        x-exportParamName: "Tag"
      responses:
        201:
          description: "Created"
        202:
          description: "Accepted"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a list of clusters for an account"
      operationId: "getClustersUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/user/serviceAccounts:
    get:
      tags:
      - "auth-controller"
      summary: "Get service accounts"
      operationId: "getServiceAccountsUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /securityGroups:
    get:
      tags:
      - "security-group-controller"
      summary: "Retrieve a list of security groups, grouped by account, cloud provider,\
        \ and region"
      operationId: "allUsingGET_5"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "id"
        in: "query"
        description: "id"
        required: false
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /v2/builds/{buildMaster}/builds/**:
    get:
      tags:
      - "build-controller"
      summary: "Get builds for build master"
      description: "Deprecated, use the v3 endpoint instead"
      operationId: "getBuildsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "buildMaster"
        in: "path"
        description: "buildMaster"
        required: true
        type: "string"
        x-exportParamName: "BuildMaster"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/clusters/{account}/{clusterName}/{type}/loadBalancers:
    get:
      tags:
      - "cluster-controller"
      summary: "Retrieve a cluster's loadbalancers"
      operationId: "getClusterLoadBalancersUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "clusterName"
        in: "path"
        description: "clusterName"
        required: true
        type: "string"
        x-exportParamName: "ClusterName"
      - name: "type"
        in: "path"
        description: "type"
        required: true
        type: "string"
        x-exportParamName: "Type_"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /auth/loggedOut:
    get:
      tags:
      - "auth-controller"
      summary: "Get logged out message"
      operationId: "loggedOutUsingGET"
      produces:
      - "*/*"
      parameters: []
      responses:
        200:
          description: "OK"
          schema:
            type: "string"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{applicationName}/serverGroups:
    get:
      tags:
      - "server-group-controller"
      summary: "Retrieve a list of server groups for a given application"
      operationId: "getServerGroupsForApplicationUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "applicationName"
        in: "path"
        description: "applicationName"
        required: true
        type: "string"
        x-exportParamName: "ApplicationName"
      - name: "cloudProvider"
        in: "query"
        description: "cloudProvider"
        required: false
        type: "string"
        x-exportParamName: "CloudProvider"
      - name: "clusters"
        in: "query"
        description: "clusters"
        required: false
        type: "string"
        x-exportParamName: "Clusters"
      - name: "expand"
        in: "query"
        description: "expand"
        required: false
        type: "string"
        default: "false"
        x-exportParamName: "Expand"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /firewalls:
    get:
      tags:
      - "firewall-controller"
      summary: "Retrieve a list of firewalls, grouped by account, cloud provider,\
        \ and region"
      operationId: "allUsingGET_1"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "id"
        in: "query"
        description: "id"
        required: false
        type: "string"
        x-exportParamName: "Id"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of applications"
      operationId: "getAllApplicationsUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "account"
        in: "query"
        description: "filters results to only include applications deployed in the\
          \ specified account"
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "Account"
      - name: "owner"
        in: "query"
        description: "filteres results to only include applications owned by the specified\
          \ email"
        required: false
        type: "string"
        allowEmptyValue: false
        x-exportParamName: "Owner"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /applications/{application}/history:
    get:
      tags:
      - "application-controller"
      summary: "Retrieve a list of an application's configuration revision history"
      operationId: "getApplicationHistoryUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "application"
        in: "path"
        description: "application"
        required: true
        type: "string"
        x-exportParamName: "Application"
      - name: "limit"
        in: "query"
        description: "limit"
        required: false
        type: "integer"
        default: 20
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /firewalls/{account}/{region}/{name}:
    get:
      tags:
      - "firewall-controller"
      summary: "Retrieve a firewall's details"
      operationId: "getSecurityGroupUsingGET"
      produces:
      - "*/*"
      parameters:
      - name: "X-RateLimit-App"
        in: "header"
        description: "X-RateLimit-App"
        required: false
        type: "string"
        x-exportParamName: "XRateLimitApp"
      - name: "account"
        in: "path"
        description: "account"
        required: true
        type: "string"
        x-exportParamName: "Account"
      - name: "name"
        in: "path"
        description: "name"
        required: true
        type: "string"
        x-exportParamName: "Name"
      - name: "provider"
        in: "query"
        description: "provider"
        required: false
        type: "string"
        default: "aws"
        x-exportParamName: "Provider"
      - name: "region"
        in: "path"
        description: "region"
        required: true
        type: "string"
        x-exportParamName: "Region"
      - name: "vpcId"
        in: "query"
        description: "vpcId"
        required: false
        type: "string"
        x-exportParamName: "VpcId"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties: {}
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
definitions:
  User:
    type: "object"
    properties:
      roles:
        type: "array"
        items:
          type: "string"
      allowedAccounts:
        type: "array"
        items:
          type: "string"
      accountNonLocked:
        type: "boolean"
      username:
        type: "string"
      enabled:
        type: "boolean"
      accountNonExpired:
        type: "boolean"
      firstName:
        type: "string"
      lastName:
        type: "string"
      credentialsNonExpired:
        type: "boolean"
      email:
        type: "string"
      authorities:
        type: "array"
        items:
          $ref: "#/definitions/GrantedAuthority"
    title: "User"
  Account:
    type: "object"
    properties:
      skin:
        type: "string"
      type:
        type: "string"
      providerVersion:
        type: "string"
      accountId:
        type: "string"
      name:
        type: "string"
      permissions:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      requiredGroupMembership:
        type: "array"
        items:
          type: "string"
    title: "Account"
  Version:
    type: "object"
    properties:
      version:
        type: "string"
    title: "Version"
  PipelineTemplateDependent:
    type: "object"
    properties:
      pipelineConfigId:
        type: "string"
      application:
        type: "string"
      pipelineName:
        type: "string"
    title: "PipelineTemplateDependent"
  ResponseEntity:
    type: "object"
    properties:
      body:
        type: "object"
        properties: {}
      statusCodeValue:
        type: "integer"
        format: "int32"
      statusCode:
        type: "string"
        enum:
        - "100 CONTINUE"
        - "101 SWITCHING_PROTOCOLS"
        - "102 PROCESSING"
        - "103 CHECKPOINT"
        - "200 OK"
        - "201 CREATED"
        - "202 ACCEPTED"
        - "203 NON_AUTHORITATIVE_INFORMATION"
        - "204 NO_CONTENT"
        - "205 RESET_CONTENT"
        - "206 PARTIAL_CONTENT"
        - "207 MULTI_STATUS"
        - "208 ALREADY_REPORTED"
        - "226 IM_USED"
        - "300 MULTIPLE_CHOICES"
        - "301 MOVED_PERMANENTLY"
        - "302 FOUND"
        - "302 MOVED_TEMPORARILY"
        - "303 SEE_OTHER"
        - "304 NOT_MODIFIED"
        - "305 USE_PROXY"
        - "307 TEMPORARY_REDIRECT"
        - "308 PERMANENT_REDIRECT"
        - "400 BAD_REQUEST"
        - "401 UNAUTHORIZED"
        - "402 PAYMENT_REQUIRED"
        - "403 FORBIDDEN"
        - "404 NOT_FOUND"
        - "405 METHOD_NOT_ALLOWED"
        - "406 NOT_ACCEPTABLE"
        - "407 PROXY_AUTHENTICATION_REQUIRED"
        - "408 REQUEST_TIMEOUT"
        - "409 CONFLICT"
        - "410 GONE"
        - "411 LENGTH_REQUIRED"
        - "412 PRECONDITION_FAILED"
        - "413 PAYLOAD_TOO_LARGE"
        - "413 REQUEST_ENTITY_TOO_LARGE"
        - "414 URI_TOO_LONG"
        - "414 REQUEST_URI_TOO_LONG"
        - "415 UNSUPPORTED_MEDIA_TYPE"
        - "416 REQUESTED_RANGE_NOT_SATISFIABLE"
        - "417 EXPECTATION_FAILED"
        - "418 I_AM_A_TEAPOT"
        - "419 INSUFFICIENT_SPACE_ON_RESOURCE"
        - "420 METHOD_FAILURE"
        - "421 DESTINATION_LOCKED"
        - "422 UNPROCESSABLE_ENTITY"
        - "423 LOCKED"
        - "424 FAILED_DEPENDENCY"
        - "426 UPGRADE_REQUIRED"
        - "428 PRECONDITION_REQUIRED"
        - "429 TOO_MANY_REQUESTS"
        - "431 REQUEST_HEADER_FIELDS_TOO_LARGE"
        - "451 UNAVAILABLE_FOR_LEGAL_REASONS"
        - "500 INTERNAL_SERVER_ERROR"
        - "501 NOT_IMPLEMENTED"
        - "502 BAD_GATEWAY"
        - "503 SERVICE_UNAVAILABLE"
        - "504 GATEWAY_TIMEOUT"
        - "505 HTTP_VERSION_NOT_SUPPORTED"
        - "506 VARIANT_ALSO_NEGOTIATES"
        - "507 INSUFFICIENT_STORAGE"
        - "508 LOOP_DETECTED"
        - "509 BANDWIDTH_LIMIT_EXCEEDED"
        - "510 NOT_EXTENDED"
        - "511 NETWORK_AUTHENTICATION_REQUIRED"
    title: "ResponseEntity"
  MapÂ«string,stringÂ»:
    type: "object"
    title: "MapÂ«string,stringÂ»"
    additionalProperties:
      type: "string"
  GrantedAuthority:
    type: "object"
    properties:
      authority:
        type: "string"
    title: "GrantedAuthority"
  HttpEntity:
    type: "object"
    properties:
      body:
        type: "object"
        properties: {}
    title: "HttpEntity"
  AccountDetails:
    type: "object"
    properties:
      environment:
        type: "string"
      name:
        type: "string"
      primaryAccount:
        type: "boolean"
      requiredGroupMembership:
        type: "array"
        items:
          type: "string"
      permissions:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
      cloudProvider:
        type: "string"
      accountId:
        type: "string"
      challengeDestructiveActions:
        type: "boolean"
      type:
        type: "string"
      skin:
        type: "string"
      accountType:
        type: "string"
      providerVersion:
        type: "string"
    title: "AccountDetails"
  ReorderPipelinesCommand:
    type: "object"
    properties:
      application:
        type: "string"
      idsToIndices:
        type: "object"
        additionalProperties:
          type: "integer"
          format: "int32"
    title: "ReorderPipelinesCommand"
    example:
      idsToIndices:
        key: 0
      application: "application"
  HashMapÂ«string,objectÂ»:
    type: "object"
    title: "HashMapÂ«string,objectÂ»"
    additionalProperties:
      type: "object"
      properties: {}
